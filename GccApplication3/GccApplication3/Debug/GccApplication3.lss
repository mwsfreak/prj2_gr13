
GccApplication3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  000003d6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000362  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000013  00800200  00800200  000003d6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003d6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000408  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00000448  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000127a  00000000  00000000  000004a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ebe  00000000  00000000  00001722  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000696  00000000  00000000  000025e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d0  00000000  00000000  00002c78  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000737  00000000  00000000  00002d48  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002f6  00000000  00000000  0000347f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00003775  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	72 c0       	rjmp	.+228    	; 0xe6 <__ctors_end>
   2:	00 00       	nop
   4:	d9 c0       	rjmp	.+434    	; 0x1b8 <__vector_1>
   6:	00 00       	nop
   8:	8f c0       	rjmp	.+286    	; 0x128 <__bad_interrupt>
   a:	00 00       	nop
   c:	8d c0       	rjmp	.+282    	; 0x128 <__bad_interrupt>
   e:	00 00       	nop
  10:	8b c0       	rjmp	.+278    	; 0x128 <__bad_interrupt>
  12:	00 00       	nop
  14:	89 c0       	rjmp	.+274    	; 0x128 <__bad_interrupt>
  16:	00 00       	nop
  18:	87 c0       	rjmp	.+270    	; 0x128 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	85 c0       	rjmp	.+266    	; 0x128 <__bad_interrupt>
  1e:	00 00       	nop
  20:	83 c0       	rjmp	.+262    	; 0x128 <__bad_interrupt>
  22:	00 00       	nop
  24:	81 c0       	rjmp	.+258    	; 0x128 <__bad_interrupt>
  26:	00 00       	nop
  28:	7f c0       	rjmp	.+254    	; 0x128 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7d c0       	rjmp	.+250    	; 0x128 <__bad_interrupt>
  2e:	00 00       	nop
  30:	7b c0       	rjmp	.+246    	; 0x128 <__bad_interrupt>
  32:	00 00       	nop
  34:	79 c0       	rjmp	.+242    	; 0x128 <__bad_interrupt>
  36:	00 00       	nop
  38:	77 c0       	rjmp	.+238    	; 0x128 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	75 c0       	rjmp	.+234    	; 0x128 <__bad_interrupt>
  3e:	00 00       	nop
  40:	73 c0       	rjmp	.+230    	; 0x128 <__bad_interrupt>
  42:	00 00       	nop
  44:	71 c0       	rjmp	.+226    	; 0x128 <__bad_interrupt>
  46:	00 00       	nop
  48:	6f c0       	rjmp	.+222    	; 0x128 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6d c0       	rjmp	.+218    	; 0x128 <__bad_interrupt>
  4e:	00 00       	nop
  50:	6b c0       	rjmp	.+214    	; 0x128 <__bad_interrupt>
  52:	00 00       	nop
  54:	69 c0       	rjmp	.+210    	; 0x128 <__bad_interrupt>
  56:	00 00       	nop
  58:	67 c0       	rjmp	.+206    	; 0x128 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	65 c0       	rjmp	.+202    	; 0x128 <__bad_interrupt>
  5e:	00 00       	nop
  60:	63 c0       	rjmp	.+198    	; 0x128 <__bad_interrupt>
  62:	00 00       	nop
  64:	61 c0       	rjmp	.+194    	; 0x128 <__bad_interrupt>
  66:	00 00       	nop
  68:	5f c0       	rjmp	.+190    	; 0x128 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5d c0       	rjmp	.+186    	; 0x128 <__bad_interrupt>
  6e:	00 00       	nop
  70:	5b c0       	rjmp	.+182    	; 0x128 <__bad_interrupt>
  72:	00 00       	nop
  74:	59 c0       	rjmp	.+178    	; 0x128 <__bad_interrupt>
  76:	00 00       	nop
  78:	57 c0       	rjmp	.+174    	; 0x128 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	55 c0       	rjmp	.+170    	; 0x128 <__bad_interrupt>
  7e:	00 00       	nop
  80:	53 c0       	rjmp	.+166    	; 0x128 <__bad_interrupt>
  82:	00 00       	nop
  84:	51 c0       	rjmp	.+162    	; 0x128 <__bad_interrupt>
  86:	00 00       	nop
  88:	4f c0       	rjmp	.+158    	; 0x128 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4d c0       	rjmp	.+154    	; 0x128 <__bad_interrupt>
  8e:	00 00       	nop
  90:	4b c0       	rjmp	.+150    	; 0x128 <__bad_interrupt>
  92:	00 00       	nop
  94:	49 c0       	rjmp	.+146    	; 0x128 <__bad_interrupt>
  96:	00 00       	nop
  98:	47 c0       	rjmp	.+142    	; 0x128 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	45 c0       	rjmp	.+138    	; 0x128 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	43 c0       	rjmp	.+134    	; 0x128 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	41 c0       	rjmp	.+130    	; 0x128 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3f c0       	rjmp	.+126    	; 0x128 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3d c0       	rjmp	.+122    	; 0x128 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	3b c0       	rjmp	.+118    	; 0x128 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	39 c0       	rjmp	.+114    	; 0x128 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	37 c0       	rjmp	.+110    	; 0x128 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	35 c0       	rjmp	.+106    	; 0x128 <__bad_interrupt>
  be:	00 00       	nop
  c0:	33 c0       	rjmp	.+102    	; 0x128 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	31 c0       	rjmp	.+98     	; 0x128 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2f c0       	rjmp	.+94     	; 0x128 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2d c0       	rjmp	.+90     	; 0x128 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	2b c0       	rjmp	.+86     	; 0x128 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	29 c0       	rjmp	.+82     	; 0x128 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	27 c0       	rjmp	.+78     	; 0x128 <__bad_interrupt>
  da:	00 00       	nop
  dc:	25 c0       	rjmp	.+74     	; 0x128 <__bad_interrupt>
  de:	00 00       	nop
  e0:	23 c0       	rjmp	.+70     	; 0x128 <__bad_interrupt>
	...

000000e4 <__ctors_start>:
  e4:	05 01       	movw	r0, r10

000000e6 <__ctors_end>:
  e6:	11 24       	eor	r1, r1
  e8:	1f be       	out	0x3f, r1	; 63
  ea:	cf ef       	ldi	r28, 0xFF	; 255
  ec:	d1 e2       	ldi	r29, 0x21	; 33
  ee:	de bf       	out	0x3e, r29	; 62
  f0:	cd bf       	out	0x3d, r28	; 61
  f2:	00 e0       	ldi	r16, 0x00	; 0
  f4:	0c bf       	out	0x3c, r16	; 60

000000f6 <__do_clear_bss>:
  f6:	22 e0       	ldi	r18, 0x02	; 2
  f8:	a0 e0       	ldi	r26, 0x00	; 0
  fa:	b2 e0       	ldi	r27, 0x02	; 2
  fc:	01 c0       	rjmp	.+2      	; 0x100 <.do_clear_bss_start>

000000fe <.do_clear_bss_loop>:
  fe:	1d 92       	st	X+, r1

00000100 <.do_clear_bss_start>:
 100:	a3 31       	cpi	r26, 0x13	; 19
 102:	b2 07       	cpc	r27, r18
 104:	e1 f7       	brne	.-8      	; 0xfe <.do_clear_bss_loop>

00000106 <__do_global_ctors>:
 106:	10 e0       	ldi	r17, 0x00	; 0
 108:	c3 e7       	ldi	r28, 0x73	; 115
 10a:	d0 e0       	ldi	r29, 0x00	; 0
 10c:	00 e0       	ldi	r16, 0x00	; 0
 10e:	05 c0       	rjmp	.+10     	; 0x11a <__do_global_ctors+0x14>
 110:	21 97       	sbiw	r28, 0x01	; 1
 112:	01 09       	sbc	r16, r1
 114:	80 2f       	mov	r24, r16
 116:	fe 01       	movw	r30, r28
 118:	1a d1       	rcall	.+564    	; 0x34e <__tablejump2__>
 11a:	c2 37       	cpi	r28, 0x72	; 114
 11c:	d1 07       	cpc	r29, r17
 11e:	80 e0       	ldi	r24, 0x00	; 0
 120:	08 07       	cpc	r16, r24
 122:	b1 f7       	brne	.-20     	; 0x110 <__do_global_ctors+0xa>
 124:	02 d0       	rcall	.+4      	; 0x12a <main>
 126:	1b c1       	rjmp	.+566    	; 0x35e <_exit>

00000128 <__bad_interrupt>:
 128:	6b cf       	rjmp	.-298    	; 0x0 <__vectors>

0000012a <main>:
X10_TX X10TX_obj;

int main(void) {
	
	while(1) {
		X10TX_obj.transmit(0b10, 0b0010);
 12a:	42 e0       	ldi	r20, 0x02	; 2
 12c:	62 e0       	ldi	r22, 0x02	; 2
 12e:	80 e0       	ldi	r24, 0x00	; 0
 130:	92 e0       	ldi	r25, 0x02	; 2
 132:	9f d0       	rcall	.+318    	; 0x272 <_ZN6X10_TX8transmitEcc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 134:	2f ef       	ldi	r18, 0xFF	; 255
 136:	83 ed       	ldi	r24, 0xD3	; 211
 138:	90 e3       	ldi	r25, 0x30	; 48
 13a:	21 50       	subi	r18, 0x01	; 1
 13c:	80 40       	sbci	r24, 0x00	; 0
 13e:	90 40       	sbci	r25, 0x00	; 0
 140:	e1 f7       	brne	.-8      	; 0x13a <main+0x10>
 142:	00 c0       	rjmp	.+0      	; 0x144 <main+0x1a>
 144:	00 00       	nop
	
		_delay_ms(1000);
		X10TX_obj.transmit(0b10, 0b0001);
 146:	41 e0       	ldi	r20, 0x01	; 1
 148:	62 e0       	ldi	r22, 0x02	; 2
 14a:	80 e0       	ldi	r24, 0x00	; 0
 14c:	92 e0       	ldi	r25, 0x02	; 2
 14e:	91 d0       	rcall	.+290    	; 0x272 <_ZN6X10_TX8transmitEcc>
 150:	2f ef       	ldi	r18, 0xFF	; 255
 152:	83 ed       	ldi	r24, 0xD3	; 211
 154:	90 e3       	ldi	r25, 0x30	; 48
 156:	21 50       	subi	r18, 0x01	; 1
 158:	80 40       	sbci	r24, 0x00	; 0
 15a:	90 40       	sbci	r25, 0x00	; 0
 15c:	e1 f7       	brne	.-8      	; 0x156 <main+0x2c>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <main+0x36>
 160:	00 00       	nop
		_delay_ms(1000);
		X10TX_obj.transmit(0b10, 0b1001);
 162:	49 e0       	ldi	r20, 0x09	; 9
 164:	62 e0       	ldi	r22, 0x02	; 2
 166:	80 e0       	ldi	r24, 0x00	; 0
 168:	92 e0       	ldi	r25, 0x02	; 2
 16a:	83 d0       	rcall	.+262    	; 0x272 <_ZN6X10_TX8transmitEcc>
 16c:	2f ef       	ldi	r18, 0xFF	; 255
 16e:	83 ed       	ldi	r24, 0xD3	; 211
 170:	90 e3       	ldi	r25, 0x30	; 48
 172:	21 50       	subi	r18, 0x01	; 1
 174:	80 40       	sbci	r24, 0x00	; 0
 176:	90 40       	sbci	r25, 0x00	; 0
 178:	e1 f7       	brne	.-8      	; 0x172 <main+0x48>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <main+0x52>
 17c:	00 00       	nop
		_delay_ms(1000);
		X10TX_obj.transmit(0b10, 0b1101);
 17e:	4d e0       	ldi	r20, 0x0D	; 13
 180:	62 e0       	ldi	r22, 0x02	; 2
 182:	80 e0       	ldi	r24, 0x00	; 0
 184:	92 e0       	ldi	r25, 0x02	; 2
 186:	75 d0       	rcall	.+234    	; 0x272 <_ZN6X10_TX8transmitEcc>
 188:	2f ef       	ldi	r18, 0xFF	; 255
 18a:	83 ed       	ldi	r24, 0xD3	; 211
 18c:	90 e3       	ldi	r25, 0x30	; 48
 18e:	21 50       	subi	r18, 0x01	; 1
 190:	80 40       	sbci	r24, 0x00	; 0
 192:	90 40       	sbci	r25, 0x00	; 0
 194:	e1 f7       	brne	.-8      	; 0x18e <main+0x64>
 196:	00 c0       	rjmp	.+0      	; 0x198 <main+0x6e>
 198:	00 00       	nop
		_delay_ms(1000);
		X10TX_obj.transmit(0b10, 0b1110);
 19a:	4e e0       	ldi	r20, 0x0E	; 14
 19c:	62 e0       	ldi	r22, 0x02	; 2
 19e:	80 e0       	ldi	r24, 0x00	; 0
 1a0:	92 e0       	ldi	r25, 0x02	; 2
 1a2:	67 d0       	rcall	.+206    	; 0x272 <_ZN6X10_TX8transmitEcc>
 1a4:	2f ef       	ldi	r18, 0xFF	; 255
 1a6:	83 ed       	ldi	r24, 0xD3	; 211
 1a8:	90 e3       	ldi	r25, 0x30	; 48
 1aa:	21 50       	subi	r18, 0x01	; 1
 1ac:	80 40       	sbci	r24, 0x00	; 0
 1ae:	90 40       	sbci	r25, 0x00	; 0
 1b0:	e1 f7       	brne	.-8      	; 0x1aa <main+0x80>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <main+0x8a>
 1b4:	00 00       	nop
 1b6:	b9 cf       	rjmp	.-142    	; 0x12a <main>

000001b8 <__vector_1>:
		
	}

}

ISR(INT0_vect) {
 1b8:	1f 92       	push	r1
 1ba:	0f 92       	push	r0
 1bc:	0f b6       	in	r0, 0x3f	; 63
 1be:	0f 92       	push	r0
 1c0:	11 24       	eor	r1, r1
 1c2:	0b b6       	in	r0, 0x3b	; 59
 1c4:	0f 92       	push	r0
 1c6:	2f 93       	push	r18
 1c8:	3f 93       	push	r19
 1ca:	4f 93       	push	r20
 1cc:	5f 93       	push	r21
 1ce:	6f 93       	push	r22
 1d0:	7f 93       	push	r23
 1d2:	8f 93       	push	r24
 1d4:	9f 93       	push	r25
 1d6:	af 93       	push	r26
 1d8:	bf 93       	push	r27
 1da:	ef 93       	push	r30
 1dc:	ff 93       	push	r31
	
	X10TX_obj.x10_tx_interrupt();
 1de:	80 e0       	ldi	r24, 0x00	; 0
 1e0:	92 e0       	ldi	r25, 0x02	; 2
 1e2:	8a d0       	rcall	.+276    	; 0x2f8 <_ZN6X10_TX16x10_tx_interruptEv>
 1e4:	ff 91       	pop	r31
 1e6:	ef 91       	pop	r30
 1e8:	bf 91       	pop	r27
 1ea:	af 91       	pop	r26
 1ec:	9f 91       	pop	r25
 1ee:	8f 91       	pop	r24
 1f0:	7f 91       	pop	r23
 1f2:	6f 91       	pop	r22
 1f4:	5f 91       	pop	r21
 1f6:	4f 91       	pop	r20
 1f8:	3f 91       	pop	r19
 1fa:	2f 91       	pop	r18
 1fc:	0f 90       	pop	r0
 1fe:	0b be       	out	0x3b, r0	; 59
 200:	0f 90       	pop	r0
 202:	0f be       	out	0x3f, r0	; 63
 204:	0f 90       	pop	r0
 206:	1f 90       	pop	r1
 208:	18 95       	reti

0000020a <_GLOBAL__sub_I_X10TX_obj>:
#include "X10_TX.h"

#define F_CPU 16000000
#include <util/delay.h>

X10_TX X10TX_obj;
 20a:	80 e0       	ldi	r24, 0x00	; 0
 20c:	92 e0       	ldi	r25, 0x02	; 2
 20e:	01 c0       	rjmp	.+2      	; 0x212 <_ZN6X10_TXC1Ev>
 210:	08 95       	ret

00000212 <_ZN6X10_TXC1Ev>:
 212:	dc 01       	movw	r26, r24
 214:	51 96       	adiw	r26, 0x11	; 17
 216:	1c 92       	st	X, r1
 218:	1e 92       	st	-X, r1
 21a:	50 97       	sbiw	r26, 0x10	; 16
 21c:	52 96       	adiw	r26, 0x12	; 18
 21e:	1c 92       	st	X, r1
 220:	52 97       	sbiw	r26, 0x12	; 18
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	8c 93       	st	X, r24
 226:	11 96       	adiw	r26, 0x01	; 1
 228:	8c 93       	st	X, r24
 22a:	11 97       	sbiw	r26, 0x01	; 1
 22c:	12 96       	adiw	r26, 0x02	; 2
 22e:	8c 93       	st	X, r24
 230:	12 97       	sbiw	r26, 0x02	; 2
 232:	13 96       	adiw	r26, 0x03	; 3
 234:	1c 92       	st	X, r1
 236:	13 97       	sbiw	r26, 0x03	; 3
 238:	fd 01       	movw	r30, r26
 23a:	34 96       	adiw	r30, 0x04	; 4
 23c:	cd 01       	movw	r24, r26
 23e:	40 96       	adiw	r24, 0x10	; 16
 240:	11 92       	st	Z+, r1
 242:	e8 17       	cp	r30, r24
 244:	f9 07       	cpc	r31, r25
 246:	e1 f7       	brne	.-8      	; 0x240 <_ZN6X10_TXC1Ev+0x2e>
 248:	81 e0       	ldi	r24, 0x01	; 1
 24a:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x700069>
 24e:	8d bb       	out	0x1d, r24	; 29
 250:	78 94       	sei
 252:	8f ef       	ldi	r24, 0xFF	; 255
 254:	84 b9       	out	0x04, r24	; 4
 256:	15 b8       	out	0x05, r1	; 5
 258:	80 e4       	ldi	r24, 0x40	; 64
 25a:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
 25e:	88 e0       	ldi	r24, 0x08	; 8
 260:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
 264:	82 e4       	ldi	r24, 0x42	; 66
 266:	90 e0       	ldi	r25, 0x00	; 0
 268:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 26c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
 270:	08 95       	ret

00000272 <_ZN6X10_TX8transmitEcc>:
 272:	fc 01       	movw	r30, r24
 274:	8f ef       	ldi	r24, 0xFF	; 255
 276:	84 0f       	add	r24, r20
 278:	8f 30       	cpi	r24, 0x0F	; 15
 27a:	10 f4       	brcc	.+4      	; 0x280 <_ZN6X10_TX8transmitEcc+0xe>
 27c:	64 30       	cpi	r22, 0x04	; 4
 27e:	18 f0       	brcs	.+6      	; 0x286 <_ZN6X10_TX8transmitEcc+0x14>
 280:	12 8a       	std	Z+18, r1	; 0x12
 282:	80 e0       	ldi	r24, 0x00	; 0
 284:	08 95       	ret
 286:	61 ff       	sbrs	r22, 1
 288:	04 c0       	rjmp	.+8      	; 0x292 <_ZN6X10_TX8transmitEcc+0x20>
 28a:	81 e0       	ldi	r24, 0x01	; 1
 28c:	84 83       	std	Z+4, r24	; 0x04
 28e:	15 82       	std	Z+5, r1	; 0x05
 290:	03 c0       	rjmp	.+6      	; 0x298 <_ZN6X10_TX8transmitEcc+0x26>
 292:	14 82       	std	Z+4, r1	; 0x04
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	85 83       	std	Z+5, r24	; 0x05
 298:	60 ff       	sbrs	r22, 0
 29a:	04 c0       	rjmp	.+8      	; 0x2a4 <_ZN6X10_TX8transmitEcc+0x32>
 29c:	81 e0       	ldi	r24, 0x01	; 1
 29e:	86 83       	std	Z+6, r24	; 0x06
 2a0:	17 82       	std	Z+7, r1	; 0x07
 2a2:	03 c0       	rjmp	.+6      	; 0x2aa <_ZN6X10_TX8transmitEcc+0x38>
 2a4:	16 82       	std	Z+6, r1	; 0x06
 2a6:	81 e0       	ldi	r24, 0x01	; 1
 2a8:	87 83       	std	Z+7, r24	; 0x07
 2aa:	43 ff       	sbrs	r20, 3
 2ac:	04 c0       	rjmp	.+8      	; 0x2b6 <_ZN6X10_TX8transmitEcc+0x44>
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	80 87       	std	Z+8, r24	; 0x08
 2b2:	11 86       	std	Z+9, r1	; 0x09
 2b4:	03 c0       	rjmp	.+6      	; 0x2bc <_ZN6X10_TX8transmitEcc+0x4a>
 2b6:	10 86       	std	Z+8, r1	; 0x08
 2b8:	81 e0       	ldi	r24, 0x01	; 1
 2ba:	81 87       	std	Z+9, r24	; 0x09
 2bc:	42 ff       	sbrs	r20, 2
 2be:	04 c0       	rjmp	.+8      	; 0x2c8 <_ZN6X10_TX8transmitEcc+0x56>
 2c0:	81 e0       	ldi	r24, 0x01	; 1
 2c2:	82 87       	std	Z+10, r24	; 0x0a
 2c4:	13 86       	std	Z+11, r1	; 0x0b
 2c6:	03 c0       	rjmp	.+6      	; 0x2ce <_ZN6X10_TX8transmitEcc+0x5c>
 2c8:	12 86       	std	Z+10, r1	; 0x0a
 2ca:	81 e0       	ldi	r24, 0x01	; 1
 2cc:	83 87       	std	Z+11, r24	; 0x0b
 2ce:	41 ff       	sbrs	r20, 1
 2d0:	04 c0       	rjmp	.+8      	; 0x2da <_ZN6X10_TX8transmitEcc+0x68>
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	84 87       	std	Z+12, r24	; 0x0c
 2d6:	15 86       	std	Z+13, r1	; 0x0d
 2d8:	03 c0       	rjmp	.+6      	; 0x2e0 <_ZN6X10_TX8transmitEcc+0x6e>
 2da:	14 86       	std	Z+12, r1	; 0x0c
 2dc:	81 e0       	ldi	r24, 0x01	; 1
 2de:	85 87       	std	Z+13, r24	; 0x0d
 2e0:	40 ff       	sbrs	r20, 0
 2e2:	04 c0       	rjmp	.+8      	; 0x2ec <_ZN6X10_TX8transmitEcc+0x7a>
 2e4:	81 e0       	ldi	r24, 0x01	; 1
 2e6:	86 87       	std	Z+14, r24	; 0x0e
 2e8:	17 86       	std	Z+15, r1	; 0x0f
 2ea:	03 c0       	rjmp	.+6      	; 0x2f2 <_ZN6X10_TX8transmitEcc+0x80>
 2ec:	16 86       	std	Z+14, r1	; 0x0e
 2ee:	81 e0       	ldi	r24, 0x01	; 1
 2f0:	87 87       	std	Z+15, r24	; 0x0f
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	82 8b       	std	Z+18, r24	; 0x12
 2f6:	08 95       	ret

000002f8 <_ZN6X10_TX16x10_tx_interruptEv>:
 2f8:	fc 01       	movw	r30, r24
 2fa:	1d ba       	out	0x1d, r1	; 29
 2fc:	82 89       	ldd	r24, Z+18	; 0x12
 2fe:	88 23       	and	r24, r24
 300:	11 f1       	breq	.+68     	; 0x346 <_ZN6X10_TX16x10_tx_interruptEv+0x4e>
 302:	a0 89       	ldd	r26, Z+16	; 0x10
 304:	b1 89       	ldd	r27, Z+17	; 0x11
 306:	ae 0f       	add	r26, r30
 308:	bf 1f       	adc	r27, r31
 30a:	8c 91       	ld	r24, X
 30c:	88 23       	and	r24, r24
 30e:	79 f0       	breq	.+30     	; 0x32e <_ZN6X10_TX16x10_tx_interruptEv+0x36>
 310:	a1 e8       	ldi	r26, 0x81	; 129
 312:	b0 e0       	ldi	r27, 0x00	; 0
 314:	89 e0       	ldi	r24, 0x09	; 9
 316:	8c 93       	st	X, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 318:	8f e9       	ldi	r24, 0x9F	; 159
 31a:	9f e0       	ldi	r25, 0x0F	; 15
 31c:	01 97       	sbiw	r24, 0x01	; 1
 31e:	f1 f7       	brne	.-4      	; 0x31c <_ZN6X10_TX16x10_tx_interruptEv+0x24>
 320:	00 c0       	rjmp	.+0      	; 0x322 <_ZN6X10_TX16x10_tx_interruptEv+0x2a>
 322:	00 00       	nop
 324:	88 e0       	ldi	r24, 0x08	; 8
 326:	8c 93       	st	X, r24
 328:	82 89       	ldd	r24, Z+18	; 0x12
 32a:	88 23       	and	r24, r24
 32c:	61 f0       	breq	.+24     	; 0x346 <_ZN6X10_TX16x10_tx_interruptEv+0x4e>
 32e:	80 89       	ldd	r24, Z+16	; 0x10
 330:	91 89       	ldd	r25, Z+17	; 0x11
 332:	8f 30       	cpi	r24, 0x0F	; 15
 334:	91 05       	cpc	r25, r1
 336:	24 f0       	brlt	.+8      	; 0x340 <_ZN6X10_TX16x10_tx_interruptEv+0x48>
 338:	11 8a       	std	Z+17, r1	; 0x11
 33a:	10 8a       	std	Z+16, r1	; 0x10
 33c:	12 8a       	std	Z+18, r1	; 0x12
 33e:	03 c0       	rjmp	.+6      	; 0x346 <_ZN6X10_TX16x10_tx_interruptEv+0x4e>
 340:	01 96       	adiw	r24, 0x01	; 1
 342:	91 8b       	std	Z+17, r25	; 0x11
 344:	80 8b       	std	Z+16, r24	; 0x10
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	8c bb       	out	0x1c, r24	; 28
 34a:	8d bb       	out	0x1d, r24	; 29
 34c:	08 95       	ret

0000034e <__tablejump2__>:
 34e:	ee 0f       	add	r30, r30
 350:	ff 1f       	adc	r31, r31
 352:	88 1f       	adc	r24, r24
 354:	8b bf       	out	0x3b, r24	; 59
 356:	07 90       	elpm	r0, Z+
 358:	f6 91       	elpm	r31, Z
 35a:	e0 2d       	mov	r30, r0
 35c:	19 94       	eijmp

0000035e <_exit>:
 35e:	f8 94       	cli

00000360 <__stop_program>:
 360:	ff cf       	rjmp	.-2      	; 0x360 <__stop_program>
