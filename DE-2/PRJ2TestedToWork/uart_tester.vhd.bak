library ieee;
use ieee.std_logic_1164.all;
use work.all;

entity uart_tester is
	port(
		CLOCK_50		: in std_logic;
		KEY			: in std_logic_vector(1 downto 0);
		GPIO_1_IN	: in std_logic_vector(0 downto 0);
		SW				: in std_logic_vector(7 downto 0);
		LCD_RW		: out std_logic;
		LCD_RS		: out std_logic;
		LCD_EN		: out std_logic;
		LCD_ON		: out std_logic;
		LCD_BLON		: out std_logic;
		LEDR			: out std_logic_vector(0 downto 0);
		LCD_DATA		: out std_logic_vector(7 downto 0);
		LEDG			: out std_logic_vector(7 downto 0);
		GPIO_1_OUT	: out std_logic_vector(1 downto 1)
	);
end uart_tester;

architecture testbench of uart_tester is
signal receivedData 	: std_logic_vector(7 downto 0);
signal valid			: std_logic;
begin
	uut: entity uart
		generic map(50000000, 9600)
		port map(clk => CLOCK_50, reset => KEY(0), rxd => GPIO_1_IN(0), rxvalid => valid,
				rxdata => receivedData, txd => GPIO_1_OUT(1), txvalid => NOT(KEY(1)), txdata => SW);
	lcd: entity LCD_Driver
		generic map(50000000, 100)
		port map(clk => CLOCK_50, reset => KEY(0), rxvalid => valid, RS => LCD_RS, RW => LCD_RW, 
		EN => LCD_EN, LCDon => LCD_ON, BLon => LCD_BLON, lcddata => LCD_DATA, rxdata => receivedData);
	
	LEDR(0) <= valid;
	LEDG <= receivedData;
	
end testbench;